digraph ReactHooks {
  rankdir=LR;
  node [shape=box, style=filled, fillcolor="#f0f8ff"];
  "src\App_jsx" [label="src\App.jsx\nðŸ§  useState:\n- isRunning\n- target\nðŸ“¦ useRef:\n- robotCameraRef\n- miniMapCameraRef\n- robotPositionRef\n- robotRotationRef\n- detectObj\n- collisionIndicator\n"];
  "src\components\Modal_jsx" [label="src\components\Modal.jsx\nðŸ§  useState:\n- isVisible\n- isLeaving\n"];
  "src\components\RecordingStatusMonitor_jsx" [label="src\components\RecordingStatusMonitor.jsx\nðŸ§  useState:\n- isRecording\n- frameCount\n- episodeLength\n- error\n- isRecording\n"];
  "src\components\ReplayControls_jsx" [label="src\components\ReplayControls.jsx\nðŸ§  useState:\n- activeTab\n- isRecording\n- isMinimized\n- currentScreenData\n- loadedScreens\n- status\n- replays\n- loadingProgress\n- isLoading\n- isTraining\n- filename\n- trainingEpisodes\n- batchSize\n- trainingProgress\n- trainingStats\n- autoStopReason\n"];
  "src\components\VoiceToText_jsx" [label="src\components\VoiceToText.jsx\nðŸ§  useState:\n- isRecording\n- transcribedText\n- isProcessing\nðŸ“¦ useRef:\n- mediaRecorderRef\n- chunksRef\n"];
  "src\number2\ActionHandler_js" [label="src\number2\ActionHandler.js\nðŸ“¦ useRef:\n- localActionRef\n- keysPressed\n- keyDurations\n- lastVActionTime\n"];
  "src\number2\Main_jsx" [label="src\number2\Main.jsx\nðŸ§  useState:\n- autoStoppedReplay\n- showDashboard\n- objectPositions\nðŸ“¦ useRef:\n- positionDisplayRef\n- rotationDisplayRef\n- detectionDisplayRef\n- robotStateDisplayRef\n- targetDisplayRef\n- robotMemoryRef\n- timerDisplayRef\n- timerRef\n- timerIntervalRef\n- currentActionRef\n- currentActionDisplayRef\n- objectPositionsRef\n- closestObjectDisplayRef\n- objectsInViewRef\n- objectsInViewDisplayRef\n- isProcessingRef\n- imageCountRef\n- keysPressed\n- lastVActionTime\n- targetRef\n- buggyRef\n- recordingControlsRef\n- socketRef\n"];
  "src\number2\camera\HUDView_jsx" [label="src\number2\camera\HUDView.jsx\nðŸ§  useState:\n- hudImage\n"];
  "src\number2\camera\MiniMapHUD_jsx" [label="src\number2\camera\MiniMapHUD.jsx\nðŸ§  useState:\n- miniMapImage\n"];
  "src\number2\camera\RobotCamera_jsx" [label="src\number2\camera\RobotCamera.jsx\nðŸ“¦ useRef:\n- cameraRef\n- offscreenCanvasRef\n- renderTarget\n"];
  "src\number2\camera\TopDownCamera_jsx" [label="src\number2\camera\TopDownCamera.jsx\nðŸ“¦ useRef:\n- cameraRef\n- renderTarget\n- hudImageData\n"];
  "src\number2\helper\RobotModel_jsx" [label="src\number2\helper\RobotModel.jsx\nðŸ“¦ useRef:\n- localRef\n"];
  "src\number2\lights\DirectionalLight_jsx" [label="src\number2\lights\DirectionalLight.jsx\nðŸ“¦ useRef:\n- lightRef\n- targetRef\n- lineRef\n"];
  "src\number2\lights\Spotlight_jsx" [label="src\number2\lights\Spotlight.jsx\nðŸ“¦ useRef:\n- spotLightRef\n- targetRef\n"];
  "src\number2\lights\Spotlights_jsx" [label="src\number2\lights\Spotlights.jsx\nðŸ“¦ useRef:\n- lightRef\n- targetRef\n- lineRef\n"];
  "src\number2\scene\AgentController_js" [label="src\number2\scene\AgentController.js\nðŸ§  useState:\n- isConnected\n- agentStatus\n- lastAction\n- metrics\n"];
  "src\number2\scene\AgentDashboard_jsx" [label="src\number2\scene\AgentDashboard.jsx\nðŸ§  useState:\n- serverUrl\n"];
  "src\number2\scene\Buggy_jsx" [label="src\number2\scene\Buggy.jsx\nðŸ“¦ useRef:\n- buggyRef\n"];
  "src\number2\scene\GameLoop_jsx" [label="src\number2\scene\GameLoop.jsx\nðŸ“¦ useRef:\n- frameCounter\n- lastCollisionState\n- isRecordingRef\n- lastVKeyState\n- lastTimerValue\n- lastStateRef\n"];
  "src\number2\scene\MainScene_jsx" [label="src\number2\scene\MainScene.jsx\nðŸ“¦ useRef:\n- randomizerRef\n"];
  "src\number2\scene\ModelFunctions\ObjectRandomizer_jsx" [label="src\number2\scene\ModelFunctions\ObjectRandomizer.jsx\nðŸ§  useState:\n- resetCounter\nðŸ“¦ useRef:\n- objectRefs\n"];
  "src\number2\scene\StaticSceneElements\ScaledEnv\Plane_jsx" [label="src\number2\scene\StaticSceneElements\ScaledEnv\Plane.jsx\nðŸ“¦ useRef:\n- ref\n"];
}